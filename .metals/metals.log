2024.06.18 12:12:46 INFO  Started: Metals version 1.3.1 in folders 'F:\VS\uni\2ndYear\functional-programming-with-scala' for client Visual Studio Code 1.90.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@4eb27f1e]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@33db8fed]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@4eb27f1e]
2024.06.18 12:12:47 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.06.18 12:12:49 INFO  Shutting down server
2024.06.18 12:12:49 INFO  shutting down Metals
2024.06.18 12:12:49 INFO  Exiting server
2024.07.15 21:38:19 INFO  Started: Metals version 1.3.3 in folders 'D:\Uni\2y - 1st sem\Code\functional-programming-with-scala' for client Visual Studio Code 1.91.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@3d61c502]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@6caf91e6]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@3d61c502]
2024.07.15 21:38:20 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.15 21:38:20 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 12
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 13
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 14
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 23
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 26
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 24
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 30
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 34
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 25
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 43
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 45
Jul 15, 2024 9:38:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 44
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 75
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 46
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 80
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 76
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:33 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 93
2024.07.15 21:38:34 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 97
2024.07.15 21:38:34 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 100
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 99
Jul 15, 2024 9:38:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 94
2024.07.15 21:38:34 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:34 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:35 INFO  Running List(C:\Users\HP 840 G5\AppData\Local\Coursier\data\bin\scala-cli.BAT, setup-ide, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala)
2024.07.15 21:38:36 INFO  Attempting to connect to the build server...
2024.07.15 21:38:36 INFO  Running BSP server List(C:\Users\HP 840 G5\AppData\Local\Coursier\data\bin\.scala-cli.aux.exe, bsp, --json-options, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-options-v2.json, --json-launcher-options, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-launcher-options.json, --envs-file, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-envs.json, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala)
2024.07.15 21:38:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.metals\bsp.trace.json or C:\Users\HP 840 G5\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.15 21:38:40 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical-5\inventory-management-1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 21:38:41 INFO  BSP server: Starting compilation server
2024.07.15 21:38:51 INFO  time: Connected to build server in 15s
2024.07.15 21:38:51 INFO  Connected to Build server: scala-cli v1.4.0
2024.07.15 21:38:52 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:38:59 INFO  time: Imported build in 8.11s
2024.07.15 21:38:59 INFO  running doctor check
2024.07.15 21:38:59 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 21:38:59 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:39:02 INFO  time: compiled functional-programming-with-scala_52168fea17 in 2.31s
2024.07.15 21:39:05 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.15 21:39:08 INFO  time: indexed workspace in 9.15s
2024.07.15 21:39:53 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:39:54 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.15s
2024.07.15 21:39:54 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:39:56 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.58s
2024.07.15 21:39:56 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:39:58 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.72s
2024.07.15 21:48:35 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:48:36 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.1s
2024.07.15 21:49:40 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:49:41 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.08s
2024.07.15 21:49:58 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:49:58 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.63s
Jul 15, 2024 9:50:21 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 260
Jul 15, 2024 9:52:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 328
Jul 15, 2024 9:56:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 347
Jul 15, 2024 9:56:58 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 352
2024.07.15 21:56:59 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:56:59 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.56s
2024.07.15 21:57:04 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:57:04 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.41s
Jul 15, 2024 9:58:42 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "vscode-chat-code-block://55bb938f-c015-4696-8645-67bd2abb8330/response_2/0#%7B%22references%22%3A%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22d%3A%5C%5CUni%5C%5C2y%20-%201st%20sem%5C%5CCode%5C%5Cfunctional-programming-with-scala%5C%5Cpractical-2%5C%5C2-exercise.scala%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fd%253A%2FUni%2F2y%2520-%25201st%2520sem%2FCode%2Ffunctional-programming-with-scala%2Fpractical-2%2F2-exercise.scala%22%2C%22path%22%3A%22%2FD%3A%2FUni%2F2y%20-%201st%20sem%2FCode%2Ffunctional-programming-with-scala%2Fpractical-2%2F2-exercise.scala%22%2C%22scheme%22%3A%22file%22%7D%2C%22range%22%3A%7B%22startLineNumber%22%3A1%2C%22startColumn%22%3A1%2C%22endLineNumber%22%3A14%2C%22endColumn%22%3A29%7D%7D%5D%7D"
  ]
}
java.nio.file.FileSystemNotFoundException: Provider "vscode-chat-code-block" not installed
	at java.base/java.nio.file.Path.of(Path.java:212)
	at java.base/java.nio.file.Paths.get(Paths.java:98)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:131)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:188)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.07.15 21:58:48 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:58:48 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
2024.07.15 21:58:55 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.15 21:58:55 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.59s
Downloading https://repo1.maven.org/maven2/org/scalameta/scalafmt-core_2.13/3.7.15/scalafmt-core_2.13-3.7.15.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.11/scala-reflect-2.13.11.pom
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.11/scala-reflect-2.13.11.pom
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalafmt-core_2.13/3.7.15/scalafmt-core_2.13-3.7.15.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.11/scala-library-2.13.11.pom
Downloading https://repo1.maven.org/maven2/org/scalameta/scalameta_2.13/4.8.12/scalameta_2.13-4.8.12.pom
Downloading https://repo1.maven.org/maven2/org/scalameta/scalafmt-sysops_2.13/3.7.15/scalafmt-sysops_2.13-3.7.15.pom
Downloading https://repo1.maven.org/maven2/org/scalameta/scalafmt-config_2.13/3.7.15/scalafmt-config_2.13-3.7.15.pom
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.11/scala-library-2.13.11.pom
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalafmt-config_2.13/3.7.15/scalafmt-config_2.13-3.7.15.pom
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalafmt-sysops_2.13/3.7.15/scalafmt-sysops_2.13-3.7.15.pom
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalameta_2.13/4.8.12/scalameta_2.13-4.8.12.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scalap/2.13.12/scalap-2.13.12.pom
Downloading https://repo1.maven.org/maven2/org/scalameta/parsers_2.13/4.8.12/parsers_2.13-4.8.12.pom
2024.07.15 21:59:09 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scalap/2.13.12/scalap-2.13.12.pom
Downloaded https://repo1.maven.org/maven2/org/scalameta/parsers_2.13/4.8.12/parsers_2.13-4.8.12.pom
Downloading https://repo1.maven.org/maven2/org/scalameta/trees_2.13/4.8.12/trees_2.13-4.8.12.pom
Downloading https://repo1.maven.org/maven2/com/typesafe/config/1.4.1/config-1.4.1.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.pom
2024.07.15 21:59:09 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.pom
Downloaded https://repo1.maven.org/maven2/org/scalameta/trees_2.13/4.8.12/trees_2.13-4.8.12.pom
Downloaded https://repo1.maven.org/maven2/com/typesafe/config/1.4.1/config-1.4.1.pom
Downloading https://repo1.maven.org/maven2/org/jline/jline/3.22.0/jline-3.22.0.pom
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.12/scala-reflect-2.13.12.pom
Downloading https://repo1.maven.org/maven2/org/scalameta/common_2.13/4.8.12/common_2.13-4.8.12.pom
Downloaded https://repo1.maven.org/maven2/org/scalameta/common_2.13/4.8.12/common_2.13-4.8.12.pom
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.12/scala-reflect-2.13.12.pom
Downloaded https://repo1.maven.org/maven2/org/jline/jline/3.22.0/jline-3.22.0.pom
Downloading https://repo1.maven.org/maven2/org/jline/jline-parent/3.22.0/jline-parent-3.22.0.pom
Downloaded https://repo1.maven.org/maven2/org/jline/jline-parent/3.22.0/jline-parent-3.22.0.pom
Downloading https://repo1.maven.org/maven2/org/scalameta/trees_2.13/4.8.12/trees_2.13-4.8.12.jar
Downloading https://repo1.maven.org/maven2/org/scalameta/scalafmt-sysops_2.13/3.7.15/scalafmt-sysops_2.13-3.7.15.jar
Downloading https://repo1.maven.org/maven2/com/typesafe/config/1.4.1/config-1.4.1.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.12/scala-reflect-2.13.12.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/scalap/2.13.12/scalap-2.13.12.jar
Downloading https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalafmt-sysops_2.13/3.7.15/scalafmt-sysops_2.13-3.7.15.jar
Downloading https://repo1.maven.org/maven2/org/jline/jline/3.22.0/jline-3.22.0.jar
Downloaded https://repo1.maven.org/maven2/com/typesafe/config/1.4.1/config-1.4.1.jar
Downloading https://repo1.maven.org/maven2/org/scalameta/scalafmt-core_2.13/3.7.15/scalafmt-core_2.13-3.7.15.jar
Still downloading:
https://repo1.maven.org/maven2/org/scala-lang/scalap/2.13.12/scalap-2.13.12.jar (71.09 %, 374880 / 527354)
https://repo1.maven.org/maven2/org/scalameta/scalafmt-core_2.13/3.7.15/scalafmt-core_2.13-3.7.15.jar (68.23 %, 1425122 / 2088845)
https://repo1.maven.org/maven2/org/jline/jline/3.22.0/jline-3.22.0.jar (56.47 %, 598592 / 1060013)
https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.12/scala-reflect-2.13.12.jar (33.57 %, 1267712 / 3775795)
https://repo1.maven.org/maven2/org/scalameta/trees_2.13/4.8.12/trees_2.13-4.8.12.jar (19.39 %, 1306856 / 6740134)
https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.jar (2.92 %, 356377 / 12200301)

Downloaded https://repo1.maven.org/maven2/org/scala-lang/scalap/2.13.12/scalap-2.13.12.jar
Downloading https://repo1.maven.org/maven2/org/scalameta/common_2.13/4.8.12/common_2.13-4.8.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalafmt-core_2.13/3.7.15/scalafmt-core_2.13-3.7.15.jar
Downloading https://repo1.maven.org/maven2/org/scalameta/scalafmt-config_2.13/3.7.15/scalafmt-config_2.13-3.7.15.jar
Downloaded https://repo1.maven.org/maven2/org/jline/jline/3.22.0/jline-3.22.0.jar
Downloading https://repo1.maven.org/maven2/org/scalameta/scalameta_2.13/4.8.12/scalameta_2.13-4.8.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalafmt-config_2.13/3.7.15/scalafmt-config_2.13-3.7.15.jar
Downloading https://repo1.maven.org/maven2/org/scalameta/parsers_2.13/4.8.12/parsers_2.13-4.8.12.jar
Still downloading:
https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.12/scala-reflect-2.13.12.jar (86.11 %, 3251200 / 3775795)
https://repo1.maven.org/maven2/org/scalameta/parsers_2.13/4.8.12/parsers_2.13-4.8.12.jar (66.04 %, 572723 / 867190)
https://repo1.maven.org/maven2/org/scalameta/scalameta_2.13/4.8.12/scalameta_2.13-4.8.12.jar (54.62 %, 442289 / 809750)
https://repo1.maven.org/maven2/org/scalameta/trees_2.13/4.8.12/trees_2.13-4.8.12.jar (37.62 %, 2535656 / 6740134)
https://repo1.maven.org/maven2/org/scalameta/common_2.13/4.8.12/common_2.13-4.8.12.jar (15.28 %, 376509 / 2463771)
https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.jar (7.76 %, 946201 / 12200301)

Downloaded https://repo1.maven.org/maven2/org/scalameta/parsers_2.13/4.8.12/parsers_2.13-4.8.12.jar
Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.12/scala-reflect-2.13.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalameta/scalameta_2.13/4.8.12/scalameta_2.13-4.8.12.jar
Still downloading:
https://repo1.maven.org/maven2/org/scalameta/trees_2.13/4.8.12/trees_2.13-4.8.12.jar (69.95 %, 4714728 / 6740134)
https://repo1.maven.org/maven2/org/scalameta/common_2.13/4.8.12/common_2.13-4.8.12.jar (60.50 %, 1490621 / 2463771)
https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.jar (17.02 %, 2076697 / 12200301)

Downloaded https://repo1.maven.org/maven2/org/scalameta/common_2.13/4.8.12/common_2.13-4.8.12.jar
Downloaded https://repo1.maven.org/maven2/org/scalameta/trees_2.13/4.8.12/trees_2.13-4.8.12.jar
Still downloading:
https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.jar (55.56 %, 6778905 / 12200301)

Still downloading:
https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.jar (87.52 %, 10678297 / 12200301)

Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.12/scala-compiler-2.13.12.jar
2024.07.15 21:59:57 INFO  running doctor check
2024.07.15 21:59:57 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 21:59:57 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 21:59:57 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.76s
2024.07.15 21:59:57 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 21:59:58 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.83s
Jul 15, 2024 9:59:59 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 451
Jul 15, 2024 9:59:59 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "untitled:/d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical-2/App.scala"
  ]
}
java.nio.file.FileSystemNotFoundException: Provider "untitled" not installed
	at java.base/java.nio.file.Path.of(Path.java:212)
	at java.base/java.nio.file.Paths.get(Paths.java:98)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:131)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:188)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.07.15 21:59:58 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:00:00 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1s
2024.07.15 22:00:01 INFO  time: indexed workspace in 3.98s
2024.07.15 22:00:00 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:00:00 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.35s
2024.07.15 22:00:01 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:00:01 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.31s
2024.07.15 22:00:16 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\App.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:00:16 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\App.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:00:17 INFO  Cancelling compilation on scala-cli server
2024.07.15 22:00:17 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:00:17 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\App.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:00:18 INFO  time: code lens generation in 1.17s
2024.07.15 22:00:17 WARN  Invalid text document uri received from build server: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical-2/App.scala
2024.07.15 22:00:17 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.94s
2024.07.15 22:00:17 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:00:18 INFO  time: Imported build in 1.03s
2024.07.15 22:00:18 INFO  running doctor check
2024.07.15 22:00:18 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:00:19 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:00:19 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.36s
2024.07.15 22:00:21 INFO  time: indexed workspace in 2.7s
2024.07.15 22:00:21 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:00:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.47s
Jul 15, 2024 10:01:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 605
Jul 15, 2024 10:01:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 608
2024.07.15 22:01:14 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:01:14 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
Jul 15, 2024 10:01:27 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 637
2024.07.15 22:01:36 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:01:36 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.28s
2024.07.15 22:01:38 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:01:38 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.31s
Jul 15, 2024 10:05:46 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "vscode-chat-code-block://55bb938f-c015-4696-8645-67bd2abb8330/response_2/1#%7B%22references%22%3A%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22d%3A%5C%5CUni%5C%5C2y%20-%201st%20sem%5C%5CCode%5C%5Cfunctional-programming-with-scala%5C%5Cpractical-2%5C%5C2-exercise.scala%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fd%253A%2FUni%2F2y%2520-%25201st%2520sem%2FCode%2Ffunctional-programming-with-scala%2Fpractical-2%2F2-exercise.scala%22%2C%22path%22%3A%22%2FD%3A%2FUni%2F2y%20-%201st%20sem%2FCode%2Ffunctional-programming-with-scala%2Fpractical-2%2F2-exercise.scala%22%2C%22scheme%22%3A%22file%22%7D%2C%22range%22%3A%7B%22startLineNumber%22%3A1%2C%22startColumn%22%3A1%2C%22endLineNumber%22%3A14%2C%22endColumn%22%3A29%7D%7D%5D%7D"
  ]
}
java.nio.file.FileSystemNotFoundException: Provider "vscode-chat-code-block" not installed
	at java.base/java.nio.file.Path.of(Path.java:212)
	at java.base/java.nio.file.Paths.get(Paths.java:98)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:131)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:188)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.07.15 22:22:39 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 15, 2024 10:22:39 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 15, 2024 10:22:39 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.15 22:22:44 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:22:44 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.45s
2024.07.15 22:23:40 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:23:40 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.35s
Jul 15, 2024 10:28:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 845
Jul 15, 2024 10:28:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "vscode-chat-code-block://55bb938f-c015-4696-8645-67bd2abb8330/response_6/0#%7B%22references%22%3A%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22d%3A%5C%5CUni%5C%5C2y%20-%201st%20sem%5C%5CCode%5C%5Cfunctional-programming-with-scala%5C%5CApp.scala%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fd%253A%2FUni%2F2y%2520-%25201st%2520sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22path%22%3A%22%2Fd%3A%2FUni%2F2y%20-%201st%20sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22scheme%22%3A%22file%22%7D%2C%22range%22%3A%7B%22startLineNumber%22%3A5%2C%22startColumn%22%3A1%2C%22endLineNumber%22%3A6%2C%22endColumn%22%3A1%7D%7D%5D%7D"
  ]
}
java.nio.file.FileSystemNotFoundException: Provider "vscode-chat-code-block" not installed
	at java.base/java.nio.file.Path.of(Path.java:212)
	at java.base/java.nio.file.Paths.get(Paths.java:98)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:131)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:188)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.07.15 22:29:21 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:29:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.39s
Jul 15, 2024 10:29:21 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "vscode-chat-code-block://55bb938f-c015-4696-8645-67bd2abb8330/response_6/1#%7B%22references%22%3A%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22d%3A%5C%5CUni%5C%5C2y%20-%201st%20sem%5C%5CCode%5C%5Cfunctional-programming-with-scala%5C%5CApp.scala%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fd%253A%2FUni%2F2y%2520-%25201st%2520sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22path%22%3A%22%2Fd%3A%2FUni%2F2y%20-%201st%20sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22scheme%22%3A%22file%22%7D%2C%22range%22%3A%7B%22startLineNumber%22%3A5%2C%22startColumn%22%3A1%2C%22endLineNumber%22%3A6%2C%22endColumn%22%3A1%7D%7D%5D%7D"
  ]
}
java.nio.file.FileSystemNotFoundException: Provider "vscode-chat-code-block" not installed
	at java.base/java.nio.file.Path.of(Path.java:212)
	at java.base/java.nio.file.Paths.get(Paths.java:98)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:131)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:188)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.07.15 22:29:23 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 15, 2024 10:29:23 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n/** `Int`, a 32-bit signed integer (equivalent to Java\u0027s `int` primitive type) is a\n *  subtype of [[scala.AnyVal]]. Instances of `Int` are not\n *  represented by an object in the underlying runtime system.\n *\n *  There is an implicit conversion from [[scala.Int]] \u003d\u003e [[scala.runtime.RichInt]]\n *  which provides useful non-primitive operations.\n */\nfinal abstract class Int private extends AnyVal {\n  def toByte: Byte\n  def toShort: Short\n  def toChar: Char\n  def toInt: Int\n  def toLong: Long\n  def toFloat: Float\n  def toDouble: Double\n\n  /**\n * Returns the bitwise negation of this value.\n * @example {{{\n * ~5 \u003d\u003d -6\n * // in binary: ~00000101 \u003d\u003d\n * //             11111010\n * }}}\n */\n  def unary_~ : Int\n  /** Returns this value, unmodified. */\n  def unary_+ : Int\n  /** Returns the negation of this value. */\n  def unary_- : Int\n\n  @deprecated(\"Adding a number and a String is deprecated. Use the string interpolation `s\\\"$num$str\\\"`\", \"2.13.0\")\n  def +(x: String): String\n\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  def \u003c\u003c(x: Int): Int\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003c\u003c(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e\u003e(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e(x: Long): Int\n\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Short): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Char): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Int): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Long): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Float): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Short): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Char): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Int): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Long): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Float): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Byte): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Short): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Char): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Int): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Long): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Float): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Double): Boolean\n\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Short): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Char): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Int): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Long): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Float): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Byte): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Short): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Char): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Int): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Long): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Float): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Short): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Char): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Int): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Long): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Float): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Double): Boolean\n\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Byte): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Short): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Char): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Int): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Long): Long\n\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Byte): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Short): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Char): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Int): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Long): Long\n\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Byte): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Short): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Char): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Int): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Long): Long\n\n  /** Returns the sum of this value and `x`. */\n  def +(x: Byte): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Short): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Char): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Int): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Long): Long\n  /** Returns the sum of this value and `x`. */\n  def +(x: Float): Float\n  /** Returns the sum of this value and `x`. */\n  def +(x: Double): Double\n\n  /** Returns the difference of this value and `x`. */\n  def -(x: Byte): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Short): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Char): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Int): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Long): Long\n  /** Returns the difference of this value and `x`. */\n  def -(x: Float): Float\n  /** Returns the difference of this value and `x`. */\n  def -(x: Double): Double\n\n  /** Returns the product of this value and `x`. */\n  def *(x: Byte): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Short): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Char): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Int): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Long): Long\n  /** Returns the product of this value and `x`. */\n  def *(x: Float): Float\n  /** Returns the product of this value and `x`. */\n  def *(x: Double): Double\n\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Byte): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Short): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Char): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Int): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Long): Long\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Float): Float\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Double): Double\n\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Byte): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Short): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Char): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Int): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Long): Long\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Float): Float\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Double): Double\n\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Int] \u003d ???\n}\n\nobject Int extends AnyValCompanion {\n  /** The smallest value representable as an Int. */\n  final val MinValue \u003d java.lang.Integer.MIN_VALUE\n\n  /** The largest value representable as an Int. */\n  final val MaxValue \u003d java.lang.Integer.MAX_VALUE\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.boxToInteger`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the Int to be boxed\n   *  @return     a java.lang.Integer offering `x` as its underlying value.\n   */\n  def box(x: Int): java.lang.Integer \u003d ???\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a java.lang.Integer.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.unboxToInt`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the java.lang.Integer to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a java.lang.Integer\n   *  @return     the Int resulting from calling intValue() on `x`\n   */\n  def unbox(x: java.lang.Object): Int \u003d ???\n\n  /** The String representation of the scala.Int companion object. */\n  override def toString \u003d \"object scala.Int\"\n  /** Language mandated coercions from Int to \"wider\" types. */\n  import scala.language.implicitConversions\n  @deprecated(\"Implicit conversion from Int to Float is dangerous because it loses precision. Write `.toFloat` instead.\", \"2.13.1\")\n  implicit def int2float(x: Int): Float \u003d x.toFloat\n  implicit def int2long(x: Int): Long \u003d x.toLong\n  implicit def int2double(x: Int): Double \u003d x.toDouble\n}\n\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 15, 2024 10:29:23 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.15 22:29:29 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:29:29 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.39s
Jul 15, 2024 10:30:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "vscode-chat-code-block://55bb938f-c015-4696-8645-67bd2abb8330/response_6/1#%7B%22references%22%3A%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22d%3A%5C%5CUni%5C%5C2y%20-%201st%20sem%5C%5CCode%5C%5Cfunctional-programming-with-scala%5C%5CApp.scala%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fd%253A%2FUni%2F2y%2520-%25201st%2520sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22path%22%3A%22%2Fd%3A%2FUni%2F2y%20-%201st%20sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22scheme%22%3A%22file%22%7D%2C%22range%22%3A%7B%22startLineNumber%22%3A5%2C%22startColumn%22%3A1%2C%22endLineNumber%22%3A6%2C%22endColumn%22%3A1%7D%7D%5D%7D"
  ]
}
java.nio.file.FileSystemNotFoundException: Provider "vscode-chat-code-block" not installed
	at java.base/java.nio.file.Path.of(Path.java:212)
	at java.base/java.nio.file.Paths.get(Paths.java:98)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:131)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:188)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:31:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1007
2024.07.15 22:31:45 INFO  compiling functional-programming-with-scala_52168fea17 (18 scala sources)
2024.07.15 22:31:45 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.35s
2024.07.15 22:32:11 WARN  Using indexes to guess the definition of practical_2_Exercise_2
2024.07.15 22:32:22 WARN  Using indexes to guess the definition of practical_2_Exercise_2
Jul 15, 2024 10:34:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1058
Jul 15, 2024 10:35:19 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1077
2024.07.15 22:35:19 INFO  Cancelling compilation on scala-cli server
org.eclipse.lsp4j.jsonrpc.ResponseErrorException: The request (id: 143, method: 'buildTarget/compile') has been cancelled
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponse(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:204)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.15 22:35:19 INFO  compiling functional-programming-with-scala_52168fea17 (4 scala sources)
2024.07.15 22:35:19 WARN  Invalid text document uri received from build server: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical-1/sphere-volume.scala
2024.07.15 22:35:19 WARN  Invalid text document uri received from build server: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical-1/to-fahrenhiet.scala
2024.07.15 22:35:19 WARN  Invalid text document uri received from build server: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical-1/get-wholesale-cost.scala
2024.07.15 22:35:19 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.33s
2024.07.15 22:35:19 INFO  compiling functional-programming-with-scala_52168fea17 (3 scala sources)
2024.07.15 22:35:19 INFO  time: Imported build in 0.47s
2024.07.15 22:35:19 INFO  running doctor check
2024.07.15 22:35:19 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:35:19 INFO  Cancelling compilation on scala-cli server
2024.07.15 22:35:23 INFO  time: indexed workspace in 3.45s
2024.07.15 22:35:23 INFO  Cancelling compilation on scala-cli server
2024.07.15 22:35:23 INFO  time: Imported build in 3.9s
2024.07.15 22:35:23 INFO  running doctor check
2024.07.15 22:35:23 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:35:23 INFO  time: Imported build in 0.34s
2024.07.15 22:35:23 INFO  running doctor check
2024.07.15 22:35:23 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:35:26 INFO  time: indexed workspace in 2.17s
2024.07.15 22:35:26 INFO  time: indexed workspace in 2.2s
Jul 15, 2024 10:36:12 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1142
2024.07.15 22:36:18 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\App.scala
scala.meta.tokenizers.TokenizeException: <input>:1: error: Invalid literal number, followed by identifier character
import practical-2practical2.practical_2_Exercise_2
                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.checkNoLetter(LegacyScanner.scala:774)
	at scala.meta.internal.tokenizers.LegacyScanner.setNumberInteger$1(LegacyScanner.scala:796)
	at scala.meta.internal.tokenizers.LegacyScanner.getNumber(LegacyScanner.scala:811)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:326)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.15 22:36:23 ERROR scalafmt: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\App.scala:1: error: [dialect scala3] . expected but identifier found
import practical-2/practical2.practical_2_Exercise_2
                ^
2024.07.15 22:36:23 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 22:36:23 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.17s
Jul 15, 2024 10:36:31 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1177
Jul 15, 2024 10:39:26 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1220
Jul 15, 2024 10:40:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "metals/didFocusTextDocument",
  "params": [
    "vscode-chat-code-block://55bb938f-c015-4696-8645-67bd2abb8330/response_10/0#%7B%22references%22%3A%5B%7B%22uri%22%3A%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22d%3A%5C%5CUni%5C%5C2y%20-%201st%20sem%5C%5CCode%5C%5Cfunctional-programming-with-scala%5C%5CApp.scala%22%2C%22_sep%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fd%253A%2FUni%2F2y%2520-%25201st%2520sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22path%22%3A%22%2Fd%3A%2FUni%2F2y%20-%201st%20sem%2FCode%2Ffunctional-programming-with-scala%2FApp.scala%22%2C%22scheme%22%3A%22file%22%7D%2C%22range%22%3A%7B%22startLineNumber%22%3A1%2C%22startColumn%22%3A1%2C%22endLineNumber%22%3A2%2C%22endColumn%22%3A1%7D%7D%5D%7D"
  ]
}
java.nio.file.FileSystemNotFoundException: Provider "vscode-chat-code-block" not installed
	at java.base/java.nio.file.Path.of(Path.java:212)
	at java.base/java.nio.file.Paths.get(Paths.java:98)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionURIMtags.toAbsolutePath(MtagsEnrichments.scala:131)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:188)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didFocus(WorkspaceLspService.scala:695)
	at scala.meta.metals.lsp.DelegatingScalaService.didFocus(DelegatingScalaService.scala:43)
	at jdk.internal.reflect.GeneratedMethodAccessor16.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:40:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1236
2024.07.15 22:40:38 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 22:40:38 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.65s
2024.07.15 22:40:38 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 22:40:39 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.38s
2024.07.15 22:40:45 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
Jul 15, 2024 10:41:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1281
2024.07.15 22:41:53 INFO  compiling functional-programming-with-scala_52168fea17 (3 scala sources)
2024.07.15 22:41:54 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.02s
2024.07.15 22:42:27 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_2\2-exercise.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:42:27 INFO  running doctor check
2024.07.15 22:42:27 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:42:27 INFO  compiling functional-programming-with-scala_52168fea17 (3 scala sources)
2024.07.15 22:42:27 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.76s
2024.07.15 22:42:29 INFO  time: indexed workspace in 1.97s
2024.07.15 22:42:39 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_2\2_exercise.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 15, 2024 10:42:39 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1363
2024.07.15 22:42:39 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_2\2_exercise.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:42:40 INFO  Cancelling compilation on scala-cli server
org.eclipse.lsp4j.jsonrpc.ResponseErrorException: The request (id: 212, method: 'buildTarget/compile') has been cancelled
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponse(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:204)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.15 22:42:40 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_2\2_exercise.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:42:40 INFO  compiling functional-programming-with-scala_52168fea17 (3 scala sources)
2024.07.15 22:42:40 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.74s
2024.07.15 22:42:40 INFO  time: Imported build in 0.95s
2024.07.15 22:42:41 INFO  running doctor check
2024.07.15 22:42:41 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:42:42 INFO  time: indexed workspace in 1.63s
Jul 15, 2024 10:43:59 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1393
2024.07.15 22:48:07 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 22:48:07 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.59s
2024.07.15 22:48:07 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 22:48:07 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.17s
Jul 15, 2024 10:48:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 80,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e practical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..349]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:42 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 81,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e ppractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..350]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:42 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 82,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e prpractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..351]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:42 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 83,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e prapractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..352]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 84,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e pracpractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..353]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 85,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e practpractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..354]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1486
Jul 15, 2024 10:48:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 86,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e practipractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..355]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:44 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 88,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e practicapractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..357]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:44 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 89,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e practicalpractical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..358]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:45 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 90,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e practical_practical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..359]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

Jul 15, 2024 10:48:47 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 92,
      "uri": "file:///d%3A/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/App.scala"
    },
    "contentChanges": [
      {
        "text": "object App {\r\n  def main(args: Array[String]): Unit \u003d {\r\n    if (args.length \u003e 0) {\r\n      args(0) match {\r\n        case \"p2e2\" \u003d\u003e practical_2.practical_2_Exercise_2.run()\r\n        // Add cases for other exercises here\r\n        case _ \u003d\u003e println(\"Exercise not found.\")\r\n      }\r\n    } else {\r\n      println(\"Please specify an exercise to run.\")\r\n    }\r\n  }\r\n}\r\n"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..361]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:86)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:39)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:39)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:77)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:283)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:239)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:238)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:238)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:203)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:138)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:865)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:242)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:404)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.07.15 22:48:50 INFO  compiling functional-programming-with-scala_52168fea17 (3 scala sources)
2024.07.15 22:48:50 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.76s
2024.07.15 22:49:40 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_2\practical_2_Exercise_2.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:49:41 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_2\practical_2_Exercise_2.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:49:41 INFO  Cancelling compilation on scala-cli server
2024.07.15 22:49:41 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_2\practical_2_Exercise_2.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 22:49:41 INFO  compiling functional-programming-with-scala_52168fea17 (3 scala sources)
2024.07.15 22:49:41 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.57s
2024.07.15 22:49:42 INFO  time: Imported build in 0.69s
2024.07.15 22:49:42 INFO  running doctor check
2024.07.15 22:49:42 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:49:43 INFO  time: indexed workspace in 1.88s
Jul 15, 2024 10:50:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1555
2024.07.15 22:51:28 INFO  Cancelling compilation on scala-cli server
2024.07.15 22:51:28 INFO  time: Imported build in 0.18s
2024.07.15 22:51:28 INFO  running doctor check
2024.07.15 22:51:28 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 22:51:30 INFO  time: indexed workspace in 1.89s
2024.07.15 23:29:51 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\practical_5_exercise_1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 23:29:51 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\practical_5_exercise_1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 23:29:51 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:29:51 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:29:51 INFO  running doctor check
2024.07.15 23:29:51 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 23:29:53 INFO  time: indexed workspace in 1.8s
2024.07.15 23:29:53 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:10 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:14 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:15 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:15 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:17 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:20 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:23 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
2024.07.15 23:30:27 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/practical_5_exercise_1.scala
Jul 15, 2024 11:30:37 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1882
2024.07.15 23:33:09 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 23:33:09 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 23:33:09 INFO  Cancelling compilation on scala-cli server
org.eclipse.lsp4j.jsonrpc.ResponseErrorException: The request (id: 298, method: 'buildTarget/compile') has been cancelled
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponse(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:204)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.15 23:33:09 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.15 23:33:09 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:33:09 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.12s
2024.07.15 23:33:10 INFO  time: Imported build in 0.2s
2024.07.15 23:33:10 INFO  running doctor check
2024.07.15 23:33:10 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.15 23:33:11 INFO  time: indexed workspace in 1.65s
Jul 15, 2024 11:34:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2259
Jul 15, 2024 11:34:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2297
Jul 15, 2024 11:35:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2330
Jul 15, 2024 11:35:38 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2372
Jul 15, 2024 11:36:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2509
Jul 15, 2024 11:36:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2590
Jul 15, 2024 11:37:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2649
Jul 15, 2024 11:37:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2713
2024.07.15 23:37:48 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:37:49 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.02s
2024.07.15 23:38:17 ERROR scalafmt: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala:7: error: [dialect scala3] ; expected but ( found
    var product_list : List()
                           ^
2024.07.15 23:38:18 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:38:18 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
2024.07.15 23:38:40 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:38:40 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.4s
2024.07.15 23:39:14 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:39:14 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.43s
2024.07.15 23:39:26 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:39:26 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.45s
2024.07.15 23:41:14 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 15, 2024 11:41:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 15, 2024 11:41:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.15 23:41:14 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 15, 2024 11:41:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 15, 2024 11:41:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 15, 2024 11:41:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3050
2024.07.15 23:41:15 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:41:15 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.57s
Jul 15, 2024 11:42:30 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3097
Jul 15, 2024 11:42:49 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3146
2024.07.15 23:42:52 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.15 23:42:52 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.55s
2024.07.16 00:26:31 INFO  Shutting down server
2024.07.16 00:26:31 INFO  shutting down Metals
2024.07.16 00:26:31 INFO  Shut down connection with build server.
2024.07.16 00:26:31 INFO  Exiting server
2024.07.16 00:27:07 INFO  Started: Metals version 1.3.3 in folders 'D:\Uni\2y - 1st sem\Code\functional-programming-with-scala' for client Visual Studio Code 1.91.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@4742fa88]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@5217eaad]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@4742fa88]
2024.07.16 00:27:08 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.16 00:27:09 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:27:10 INFO  Attempting to connect to the build server...
2024.07.16 00:27:10 INFO  Running BSP server List(C:\Users\HP 840 G5\AppData\Local\Coursier\data\bin\.scala-cli.aux.exe, bsp, --json-options, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-options-v2.json, --json-launcher-options, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-launcher-options.json, --envs-file, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-envs.json, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala)
2024.07.16 00:27:10 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.metals\bsp.trace.json or C:\Users\HP 840 G5\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.07.16 00:27:17 INFO  time: Connected to build server in 6.9s
2024.07.16 00:27:17 INFO  Connected to Build server: scala-cli v1.4.0
2024.07.16 00:27:17 INFO  running doctor check
2024.07.16 00:27:17 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 00:27:20 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.16 00:27:21 INFO  time: indexed workspace in 4.55s
2024.07.16 00:30:41 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:30:41 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:30:41 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/library_management_2.scala
2024.07.16 00:30:41 INFO  running doctor check
2024.07.16 00:30:41 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 00:30:42 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:30:42 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.11s
2024.07.16 00:30:43 INFO  time: indexed workspace in 1.62s
2024.07.16 00:30:43 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/library_management_2.scala
2024.07.16 00:30:43 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/library_management_2.scala
2024.07.16 00:30:43 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/library_management_2.scala
2024.07.16 00:30:44 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/library_management_2.scala
2024.07.16 00:30:58 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:30:58 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.28s
Jul 16, 2024 12:31:02 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 294
2024.07.16 00:31:13 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\preint_fib_3.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:31:13 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\preint_fib_3.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:31:13 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/preint_fib_3.scala
2024.07.16 00:31:13 INFO  running doctor check
2024.07.16 00:31:13 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 00:31:13 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:31:13 INFO  time: compiled functional-programming-with-scala_52168fea17 in 86ms
2024.07.16 00:31:15 INFO  time: indexed workspace in 1.33s
2024.07.16 00:31:15 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/preint_fib_3.scala
2024.07.16 00:31:15 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/preint_fib_3.scala
2024.07.16 00:31:16 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_5/preint_fib_3.scala
2024.07.16 00:31:50 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\print_fib_3.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:31:50 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\print_fib_3.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:31:50 INFO  Cancelling compilation on scala-cli server
2024.07.16 00:31:50 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:31:50 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.22s
2024.07.16 00:31:51 INFO  time: Imported build in 0.3s
2024.07.16 00:31:51 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\print_fib_3.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:31:51 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\print_fib_3.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 00:31:52 INFO  running doctor check
2024.07.16 00:31:52 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 00:31:54 INFO  time: indexed workspace in 3.32s
2024.07.16 00:32:00 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:32:00 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.07.16 00:32:00 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.55s
2024.07.16 00:32:06 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 12:32:06 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\nimport scala.annotation.migration\n\n/**\n * Core Scala types. They are always available without an explicit import.\n * @contentDiagram hideNodes \"scala.Serializable\"\n */\npackage object scala {\n  type Cloneable    \u003d java.lang.Cloneable\n  type Serializable \u003d java.io.Serializable\n\n  type Throwable \u003d java.lang.Throwable\n  type Exception \u003d java.lang.Exception\n  type Error     \u003d java.lang.Error\n\n  type RuntimeException                \u003d java.lang.RuntimeException\n  type NullPointerException            \u003d java.lang.NullPointerException\n  type ClassCastException              \u003d java.lang.ClassCastException\n  type IndexOutOfBoundsException       \u003d java.lang.IndexOutOfBoundsException\n  type ArrayIndexOutOfBoundsException  \u003d java.lang.ArrayIndexOutOfBoundsException\n  type StringIndexOutOfBoundsException \u003d java.lang.StringIndexOutOfBoundsException\n  type UnsupportedOperationException   \u003d java.lang.UnsupportedOperationException\n  type IllegalArgumentException        \u003d java.lang.IllegalArgumentException\n  type NoSuchElementException          \u003d java.util.NoSuchElementException\n  type NumberFormatException           \u003d java.lang.NumberFormatException\n  type AbstractMethodError             \u003d java.lang.AbstractMethodError\n  type InterruptedException            \u003d java.lang.InterruptedException\n\n  // A dummy used by the specialization annotation.\n  val AnyRef \u003d new Specializable {\n    override def toString \u003d \"object AnyRef\"\n  }\n\n  @deprecated(\"Use IterableOnce instead of TraversableOnce\", \"2.13.0\")\n  type TraversableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  type IterableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  type Traversable[+A] \u003d scala.collection.Iterable[A]\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  val Traversable \u003d scala.collection.Iterable\n\n  type Iterable[+A] \u003d scala.collection.Iterable[A]\n  val Iterable \u003d scala.collection.Iterable\n\n  @migration(\"scala.Seq is now scala.collection.immutable.Seq instead of scala.collection.Seq\", \"2.13.0\")\n  type Seq[+A] \u003d scala.collection.immutable.Seq[A]\n  val Seq \u003d scala.collection.immutable.Seq\n\n  @migration(\"scala.IndexedSeq is now scala.collection.immutable.IndexedSeq instead of scala.collection.IndexedSeq\", \"2.13.0\")\n  type IndexedSeq[+A] \u003d scala.collection.immutable.IndexedSeq[A]\n  val IndexedSeq \u003d scala.collection.immutable.IndexedSeq\n\n  type Iterator[+A] \u003d scala.collection.Iterator[A]\n  val Iterator \u003d scala.collection.Iterator\n\n  @deprecated(\"Use scala.collection.BufferedIterator instead of scala.BufferedIterator\", \"2.13.0\")\n  type BufferedIterator[+A] \u003d scala.collection.BufferedIterator[A]\n\n  type List[+A] \u003d scala.collection.immutable.List[A]\n  val List \u003d scala.collection.immutable.List\n\n  val Nil \u003d scala.collection.immutable.Nil\n\n  type ::[+A] \u003d scala.collection.immutable.::[A]\n  val :: \u003d scala.collection.immutable.::\n\n  val +: \u003d scala.collection.+:\n  val :+ \u003d scala.collection.:+\n\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  type Stream[+A] \u003d scala.collection.immutable.Stream[A]\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  val Stream \u003d scala.collection.immutable.Stream\n\n  type LazyList[+A] \u003d scala.collection.immutable.LazyList[A]\n  val LazyList \u003d scala.collection.immutable.LazyList\n  // This should be an alias to LazyList.#:: but we need to support Stream, too\n  //val #:: \u003d scala.collection.immutable.LazyList.#::\n  object #:: {\n    def unapply[A](s: LazyList[A]): Option[(A, LazyList[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n    @deprecated(\"Prefer LazyList instead\", since \u003d \"2.13.0\")\n    def unapply[A](s: Stream[A]): Option[(A, Stream[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n  }\n\n  type Vector[+A] \u003d scala.collection.immutable.Vector[A]\n  val Vector \u003d scala.collection.immutable.Vector\n\n  type StringBuilder \u003d scala.collection.mutable.StringBuilder\n  val StringBuilder \u003d scala.collection.mutable.StringBuilder\n\n  type Range \u003d scala.collection.immutable.Range\n  val Range \u003d scala.collection.immutable.Range\n\n  // Numeric types which were moved into scala.math.*\n\n  type BigDecimal \u003d scala.math.BigDecimal\n  val BigDecimal \u003d scala.math.BigDecimal\n\n  type BigInt \u003d scala.math.BigInt\n  val BigInt \u003d scala.math.BigInt\n\n  type Equiv[T] \u003d scala.math.Equiv[T]\n  val Equiv \u003d scala.math.Equiv\n\n  type Fractional[T] \u003d scala.math.Fractional[T]\n  val Fractional \u003d scala.math.Fractional\n\n  type Integral[T] \u003d scala.math.Integral[T]\n  val Integral \u003d scala.math.Integral\n\n  type Numeric[T] \u003d scala.math.Numeric[T]\n  val Numeric \u003d scala.math.Numeric\n\n  type Ordered[T] \u003d scala.math.Ordered[T]\n  val Ordered \u003d scala.math.Ordered\n\n  type Ordering[T] \u003d scala.math.Ordering[T]\n  val Ordering \u003d scala.math.Ordering\n\n  type PartialOrdering[T] \u003d scala.math.PartialOrdering[T]\n  type PartiallyOrdered[T] \u003d scala.math.PartiallyOrdered[T]\n\n  type Either[+A, +B] \u003d scala.util.Either[A, B]\n  val Either \u003d scala.util.Either\n\n  type Left[+A, +B] \u003d scala.util.Left[A, B]\n  val Left \u003d scala.util.Left\n\n  type Right[+A, +B] \u003d scala.util.Right[A, B]\n  val Right \u003d scala.util.Right\n\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 16, 2024 12:32:06 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 00:32:06 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 12:32:06 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 16, 2024 12:32:06 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 00:32:20 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:32:20 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.33s
Jul 16, 2024 12:55:05 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 539
Jul 16, 2024 12:55:23 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 581
Jul 16, 2024 12:55:35 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 667
2024.07.16 00:55:45 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:55:45 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.2s
2024.07.16 00:57:28 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:57:28 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.4s
2024.07.16 00:58:01 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:58:01 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.5s
2024.07.16 00:58:27 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 00:58:27 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.3s
Jul 16, 2024 1:00:37 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 909
2024.07.16 01:00:44 WARN  Could not load snapshot text for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
2024.07.16 01:00:44 WARN  Could not load snapshot text for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
2024.07.16 01:00:44 WARN  Could not load snapshot text for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
2024.07.16 01:00:44 WARN  Could not load snapshot text for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
2024.07.16 01:00:44 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:00:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 16, 2024 1:00:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 01:00:44 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:00:44 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.41s
2024.07.16 01:01:26 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:01:26 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
2024.07.16 01:01:54 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:01:54 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.25s
2024.07.16 01:02:00 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:02:00 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.31s
2024.07.16 01:02:33 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:02:33 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.31s
2024.07.16 01:05:04 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:05:04 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 16, 2024 1:05:04 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 01:05:05 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:05:05 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.43s
Jul 16, 2024 1:05:05 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1084
Jul 16, 2024 1:05:08 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1094
2024.07.16 01:05:39 ERROR scalafmt: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala:5: error: [dialect scala3] ) expected but ( found
    get_product_list().foreach(x: print(x , ", "))
                                       ^
2024.07.16 01:05:40 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:05:40 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.18s
2024.07.16 01:05:59 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:05:59 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.33s
2024.07.16 01:06:10 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:06:10 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.31s
2024.07.16 01:06:21 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:06:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.29s
Jul 16, 2024 1:09:57 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1534
Jul 16, 2024 1:09:57 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1537
2024.07.16 01:10:16 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:10:16 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.17s
Jul 16, 2024 1:10:30 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1663
Jul 16, 2024 1:10:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1720
Jul 16, 2024 1:10:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1785
2024.07.16 01:11:00 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:11:00 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.39s
2024.07.16 01:13:21 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:12: error: unclosed string literal
    println("Enter the product names. Enter 'exitdo
            ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:13:21 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:12: error: unclosed string literal
    println("Enter the product names. Enter 'exitdonr
            ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:13:23 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:12: error: unclosed string literal
    println("Enter the product names. Enter 'exitdone
            ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:13:24 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:12: error: unclosed string literal
    println("Enter the product names. Enter 'exitdon
            ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:13:25 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:12: error: unclosed string literal
    println("Enter the product names. Enter 'exitdonr
            ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

Jul 16, 2024 1:13:27 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1873
2024.07.16 01:13:51 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:13:51 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.35s
Exception in thread "pool-14-thread-1" java.lang.InterruptedException
	at scala.meta.internal.metals.FutureCancelToken.checkCanceled(FutureCancelToken.scala:29)
	at scala.meta.internal.pc.CompilerAccess.onCompilerJobQueue$$anonfun$1(CompilerAccess.scala:244)
	at scala.meta.internal.pc.CompilerJobQueue$Job.run(CompilerJobQueue.scala:153)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024.07.16 01:14:58 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:14:58 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.44s
2024.07.16 01:15:13 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:29: error: unclosed string interpolation
    println(s"product_list.length)
              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:15:32 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:29: error: unclosed string interpolation
    println(s"${product_list.length")
                                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:15:46 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:29: error: unclosed string interpolation
    println(s"${product_list.length")
                                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:15:47 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:15:47 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:15:47 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 01:15:48 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:29: error: unclosed string interpolation
    println(s"product_list.length)
              ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:15:50 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\inventory_management_1.scala
scala.meta.tokenizers.TokenizeException: <input>:29: error: unclosed string interpolation
    println(s"${product_list.length")
                                    ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:15:58 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:15:58 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.52s
2024.07.16 01:16:13 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:16:13 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.37s
Jul 16, 2024 1:17:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2320
2024.07.16 01:17:59 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:17:59 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.55s
Jul 16, 2024 1:18:15 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2349
2024.07.16 01:18:27 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:18:27 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.39s
Jul 16, 2024 1:30:07 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2396
Jul 16, 2024 1:30:31 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2526
Jul 16, 2024 1:30:36 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2565
Jul 16, 2024 1:30:37 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2571
Jul 16, 2024 1:31:45 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2716
2024.07.16 01:32:51 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:32:51 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.75s
2024.07.16 01:33:08 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala
scala.meta.tokenizers.TokenizeException: <input>:9: error: unclosed string literal
      Book("The Great Gatsby", "F. Scott
                               ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:33:26 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:33:26 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.31s
2024.07.16 01:34:41 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:34:41 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.12s
2024.07.16 01:35:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:35:21 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:35:21 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 01:35:20 ERROR scalafmt: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala:31: error: [dialect scala3] } expected but end of file found

^
2024.07.16 01:35:21 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:35:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.2s
2024.07.16 01:35:31 ERROR scalafmt: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala:27: error: [dialect scala3] } expected but end of file found

^
2024.07.16 01:35:31 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:35:31 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:35:31 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2024.07.16 01:35:31 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:35:31 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.38s
Jul 16, 2024 1:35:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.StringIndexOutOfBoundsException: begin 766, end 778, length 775
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: begin 766, end 778, length 775
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.StringIndexOutOfBoundsException: begin 766, end 778, length 775
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4601)
	at java.base/java.lang.String.substring(String.java:2704)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.getIndentForPos(FlatMapToForComprehensionCodeAction.scala:679)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$4(FlatMapToForComprehensionCodeAction.scala:59)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$3(FlatMapToForComprehensionCodeAction.scala:55)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$2(FlatMapToForComprehensionCodeAction.scala:54)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$1(FlatMapToForComprehensionCodeAction.scala:53)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.07.16 01:35:49 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:35:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:35:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:35:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3199
2024.07.16 01:35:49 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:35:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:35:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2024.07.16 01:35:49 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:35:50 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:35:50 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:35:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3243
Jul 16, 2024 1:35:57 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3253
Jul 16, 2024 1:36:03 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3299
2024.07.16 01:36:10 ERROR scalafmt: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala:25: error: [dialect scala3] } expected but end of file found

^
2024.07.16 01:36:11 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:36:11 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.12s
2024.07.16 01:36:13 ERROR scalafmt: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala:25: error: [dialect scala3] } expected but end of file found

^
2024.07.16 01:36:14 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:36:14 INFO  time: compiled functional-programming-with-scala_52168fea17 in 98ms
2024.07.16 01:36:24 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:36:24 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.64s
Jul 16, 2024 1:36:55 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3482
2024.07.16 01:36:55 WARN  Could not load snapshot text for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala
2024.07.16 01:36:55 WARN  Could not load snapshot text for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala
2024.07.16 01:36:55 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:36:55 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.55s
Jul 16, 2024 1:37:33 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3624
Jul 16, 2024 1:37:38 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3645
2024.07.16 01:38:17 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:38:17 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:38:17 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2024.07.16 01:38:21 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:38:21 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:38:21 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

2024.07.16 01:38:21 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:38:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.7s
Jul 16, 2024 1:38:34 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3860
Jul 16, 2024 1:38:34 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3862
2024.07.16 01:39:20 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:39:20 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.5s
Jul 16, 2024 1:39:56 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3917
Jul 16, 2024 1:39:57 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3921
Jul 16, 2024 1:39:57 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3924
2024.07.16 01:39:57 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala
scala.meta.tokenizers.TokenizeException: <input>:58: error: unclosed string literal
    print("Enter the author}
          ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:509)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:361)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:39:58 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala
scala.meta.tokenizers.TokenizeException: <input>:63: error: unclosed string interpolation
      booksByAuthor.foreach(book => println(s"Title: ${book.title}, Author:}
                                                                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:239)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:39:59 ERROR Failed to tokenize input for semantic tokens for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_5\library_management_2.scala
scala.meta.tokenizers.TokenizeException: <input>:65: error: unclosed string interpolation
      println(s"No books found by}
                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:32)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:605)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:347)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:363)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:201)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:912)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:17)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:17)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:322)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:22)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:13)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:545)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:833)

2024.07.16 01:40:07 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:40:07 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.51s
2024.07.16 01:41:34 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:41:34 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.51s
2024.07.16 01:41:36 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:41:36 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage io\n\nimport java.text.MessageFormat\n\n/** private[scala] because this is not functionality we should be providing\n *  in the standard library, at least not in this idiosyncratic form.\n *  Factored into trait because it is better code structure regardless.\n */\nprivate[scala] trait StdIn {\n  import scala.Console._\n\n  /** Read a full line from the default input.  Returns `null` if the end of the\n   * input stream has been reached.\n   *\n   * @return the string read from the terminal or null if the end of stream was reached.\n   */\n  def readLine(): String \u003d in.readLine()\n\n  /** Print and flush formatted text to the default output, and read a full line from the default input.\n   *  Returns `null` if the end of the input stream has been reached.\n   *\n   *  @param text the format of the text to print out, as in `printf`.\n   *  @param args the parameters used to instantiate the format, as in `printf`.\n   *  @return the string read from the default input\n   */\n  def readLine(text: String, args: Any*): String \u003d {\n    printf(text, args: _*)\n    out.flush()\n    readLine()\n  }\n\n  /** Reads a boolean value from an entire line of the default input.\n   *  Has a fairly liberal interpretation of the input.\n   *\n   *  @return the boolean value read, or false if it couldn\u0027t be converted to a boolean\n   *  @throws java.io.EOFException if the end of the input stream has been reached.\n   */\n  def readBoolean(): Boolean \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLowerCase() match {\n        case \"true\" \u003d\u003e true\n        case \"t\" \u003d\u003e true\n        case \"yes\" \u003d\u003e true\n        case \"y\" \u003d\u003e true\n        case _ \u003d\u003e false\n      }\n  }\n\n  /** Reads a byte value from an entire line of the default input.\n   *\n   *  @return the Byte that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Byte\n   */\n  def readByte(): Byte \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toByte\n  }\n\n  /** Reads a short value from an entire line of the default input.\n   *\n   *  @return the short that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Short\n   */\n  def readShort(): Short \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toShort\n  }\n\n  /** Reads a char value from an entire line of the default input.\n   *\n   *  @return the Char that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.StringIndexOutOfBoundsException if the line read from default input was empty\n   */\n  def readChar(): Char \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s charAt 0\n  }\n\n  /** Reads an int value from an entire line of the default input.\n   *\n   *  @return the Int that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to an Int\n   */\n  def readInt(): Int \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toInt\n  }\n\n  /** Reads an long value from an entire line of the default input.\n   *\n   *  @return the Long that was read\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Long\n   */\n  def readLong(): Long \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toLong\n  }\n\n  /** Reads a float value from an entire line of the default input.\n   *  @return the Float that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   *\n   */\n  def readFloat(): Float \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toFloat\n  }\n\n  /** Reads a double value from an entire line of the default input.\n   *\n   *  @return the Double that was read.\n   *  @throws java.io.EOFException if the end of the\n   *  input stream has been reached.\n   *  @throws java.lang.NumberFormatException if the value couldn\u0027t be converted to a Float\n   */\n  def readDouble(): Double \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      s.toDouble\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier. See class `java.text.MessageFormat` for details of\n   *  the format specification.\n   *\n   *  @param format the format of the input.\n   *  @return a list of all extracted values.\n   *  @throws java.io.EOFException if the end of the input stream has been\n   *          reached.\n   */\n  def readf(format: String): List[Any] \u003d {\n    val s \u003d readLine()\n    if (s \u003d\u003d null)\n      throw new java.io.EOFException(\"Console has reached end of input\")\n    else\n      textComponents(new MessageFormat(format).parse(s))\n  }\n\n  /** Reads in some structured input (from the default input), specified by\n   *  a format specifier, returning only the first value extracted, according\n   *  to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return The first value that was extracted from the input\n   */\n  def readf1(format: String): Any \u003d readf(format).head\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first two values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple2]] containing the first two values extracted\n   */\n  def readf2(format: String): (Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head)\n  }\n\n  /** Reads in some structured input (from the default input), specified\n   *  by a format specifier, returning only the first three values extracted,\n   *  according to the format specification.\n   *\n   *  @param format format string, as accepted by `readf`.\n   *  @return A [[scala.Tuple3]] containing the first three values extracted\n   */\n  def readf3(format: String): (Any, Any, Any) \u003d {\n    val res \u003d readf(format)\n    (res.head, res.tail.head, res.tail.tail.head)\n  }\n\n  private def textComponents(a: Array[AnyRef]): List[Any] \u003d {\n    var i: Int \u003d a.length - 1\n    var res: List[Any] \u003d Nil\n    while (i \u003e\u003d 0) {\n      res \u003d (a(i) match {\n        case x: java.lang.Boolean   \u003d\u003e x.booleanValue()\n        case x: java.lang.Byte      \u003d\u003e x.byteValue()\n        case x: java.lang.Short     \u003d\u003e x.shortValue()\n        case x: java.lang.Character \u003d\u003e x.charValue()\n        case x: java.lang.Integer   \u003d\u003e x.intValue()\n        case x: java.lang.Long      \u003d\u003e x.longValue()\n        case x: java.lang.Float     \u003d\u003e x.floatValue()\n        case x: java.lang.Double    \u003d\u003e x.doubleValue()\n        case x \u003d\u003e x\n      }) :: res\n      i -\u003d 1\n    }\n    res\n  }\n}\n\nobject StdIn extends StdIn\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:41:36 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/io/StdIn.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at jdk.internal.reflect.GeneratedMethodAccessor31.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/io/StdIn.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 1:42:08 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4157
2024.07.16 01:42:15 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:42:15 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.07.16 01:42:15 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.36s
2024.07.16 01:42:20 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:42:20 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.07.16 01:42:20 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.27s
2024.07.16 01:44:40 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:44:40 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.44s
Jul 16, 2024 1:46:15 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4326
2024.07.16 01:46:17 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:46:17 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
2024.07.16 01:46:40 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:46:40 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.47s
Jul 16, 2024 1:47:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4504
2024.07.16 01:47:22 INFO  compiling functional-programming-with-scala_52168fea17 (1 scala source)
2024.07.16 01:47:22 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.07.16 01:47:22 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.34s
2024.07.16 01:47:39 INFO  Shutting down server
2024.07.16 01:47:39 INFO  shutting down Metals
2024.07.16 01:47:39 INFO  Shut down connection with build server.
2024.07.16 01:47:39 INFO  Exiting server
2024.07.16 01:57:38 INFO  Started: Metals version 1.3.3 in folders 'D:\Uni\2y - 1st sem\Code\functional-programming-with-scala' for client Visual Studio Code 1.91.1.
SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [scribe.slf4j.ScribeServiceProvider@1960fe25]
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@2ccfce7c]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [scribe.slf4j.ScribeServiceProvider@1960fe25]
2024.07.16 01:57:39 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.16 01:57:39 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3
2024.07.16 01:57:42 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:42 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:42 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 12
2024.07.16 01:57:42 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 13
2024.07.16 01:57:42 INFO  Attempting to connect to the build server...
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 16
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 19
Jul 16, 2024 1:57:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 17
2024.07.16 01:57:42 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:42 INFO  Running BSP server List(C:\Users\HP 840 G5\AppData\Local\Coursier\data\bin\.scala-cli.aux.exe, bsp, --json-options, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-options-v2.json, --json-launcher-options, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-launcher-options.json, --envs-file, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.scala-build\ide-envs.json, D:\Uni\2y - 1st sem\Code\functional-programming-with-scala)
2024.07.16 01:57:43 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\.metals\bsp.trace.json or C:\Users\HP 840 G5\AppData\Local\scalameta\metals\cache\bsp.trace.json
Jul 16, 2024 1:57:43 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 18
Jul 16, 2024 1:57:43 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 25
2024.07.16 01:57:43 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:45 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:45 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:48 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:49 INFO  BSP server: Starting compilation server
Jul 16, 2024 1:57:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 36
2024.07.16 01:57:50 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:50 WARN  no build target for: D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\area.scala
2024.07.16 01:57:50 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:50 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:52 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:53 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:53 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:53 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:53 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:54 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:57 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:57 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:57 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:57 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:57 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:57 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:58 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:58 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_1/get-time.scala
2024.07.16 01:57:58 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:58 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:58 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_1/get-time.scala
2024.07.16 01:57:59 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:59 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:57:59 WARN  Could not find semantic tokens for: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_1/get-time.scala
2024.07.16 01:57:59 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:58:00 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get-time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 01:58:00 INFO  time: Connected to build server in 17s
2024.07.16 01:58:00 INFO  Connected to Build server: scala-cli v1.4.0
2024.07.16 01:58:00 INFO  time: Imported build in 0.18s
2024.07.16 01:58:00 INFO  running doctor check
2024.07.16 01:58:00 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 01:58:02 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:06 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.07.16 01:58:07 INFO  time: indexed workspace in 7.25s
2024.07.16 01:58:10 INFO  time: compiled functional-programming-with-scala_52168fea17 in 8.68s
2024.07.16 01:58:10 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:14 INFO  time: compiled functional-programming-with-scala_52168fea17 in 2.46s
2024.07.16 01:58:14 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:15 INFO  Deduplicating compilation of functional-programming-with-scala_52168fea17 from bsp client 'scala-cli 1.4.0' (since 15.638s)
2024.07.16 01:58:15 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:15 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.67s
2024.07.16 01:58:16 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:18 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.25s
2024.07.16 01:58:18 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:19 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.64s
2024.07.16 01:58:21 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.64s
2024.07.16 01:58:30 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:58:30 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.71s
Jul 16, 2024 1:59:06 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 297
2024.07.16 01:59:19 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/math/package.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/math/package.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 1:59:19 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/math/package.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\n/** The package object `scala.math` contains methods for performing basic\n  * numeric operations such as elementary exponential, logarithmic, root and\n  * trigonometric functions.\n  *\n  * All methods forward to [[java.lang.Math]] unless otherwise noted.\n  *\n  * @see [[java.lang.Math]]\n  *\n  * @groupname math-const Mathematical Constants\n  * @groupprio math-const 10\n  *\n  * @groupname minmax Minimum and Maximum\n  * @groupdesc minmax Find the min or max of two numbers. Note: [[scala.collection.IterableOnceOps]] has\n  *           min and max methods which determine the min or max of a collection.\n  * @groupprio minmax 20\n  *\n  * @groupname rounding Rounding\n  * @groupprio rounding 30\n  *\n  * @groupname scaling Scaling\n  * @groupdesc scaling Scaling with rounding guarantees\n  * @groupprio scaling 40\n  *\n  * @groupname explog Exponential and Logarithmic\n  * @groupprio explog 50\n  *\n  * @groupname trig Trigonometric\n  * @groupdesc trig Arguments in radians\n  * @groupprio trig 60\n  *\n  * @groupname angle-conversion Angular Measurement Conversion\n  * @groupprio angle-conversion 70\n  *\n  * @groupname hyperbolic Hyperbolic\n  * @groupprio hyperbolic 80\n  *\n  * @groupname abs Absolute Values\n  * @groupdesc abs Determine the magnitude of a value by discarding the sign. Results are \u003e\u003d 0.\n  * @groupprio abs 90\n  *\n  * @groupname signs Signs\n  * @groupdesc signs For `signum` extract the sign of a value. Results are -1, 0 or 1.\n  * Note the `signum` methods are not pure forwarders to the Java versions.\n  * In particular, the return type of `java.lang.Long.signum` is `Int`,\n  * but here it is widened to `Long` so that each overloaded variant\n  * will return the same numeric type it is passed.\n  * @groupprio signs 100\n  *\n  * @groupname root-extraction Root Extraction\n  * @groupprio root-extraction 110\n  *\n  * @groupname polar-coords Polar Coordinates\n  * @groupprio polar-coords 120\n  *\n  * @groupname ulp Unit of Least Precision\n  * @groupprio ulp 130\n  *\n  * @groupname randomisation Pseudo Random Number Generation\n  * @groupprio randomisation 140\n  *\n  * @groupname exact Exact Arithmetic\n  * @groupdesc exact Integral addition, multiplication, stepping and conversion throwing ArithmeticException instead of underflowing or overflowing\n  * @groupprio exact 150\n  *\n  * @groupname modquo Modulus and Quotient\n  * @groupdesc modquo Calculate quotient values by rounding to negative infinity\n  * @groupprio modquo 160\n  *\n  * @groupname adjacent-float Adjacent Floats\n  * @groupprio adjacent-float 170\n  */\npackage object math {\n  /** The `Double` value that is closer than any other to `e`, the base of\n   *  the natural logarithms.\n   *  @group math-const\n   */\n  @inline final val E \u003d java.lang.Math.E\n\n  /** The `Double` value that is closer than any other to `pi`, the ratio of\n   *  the circumference of a circle to its diameter.\n   *  @group math-const\n   */\n  @inline final val Pi \u003d java.lang.Math.PI\n\n  /** Returns a `Double` value with a positive sign, greater than or equal\n   *  to `0.0` and less than `1.0`.\n   *\n   *  @group randomisation\n   */\n  def random(): Double \u003d java.lang.Math.random()\n\n  /**  @group trig */\n  def sin(x: Double): Double \u003d java.lang.Math.sin(x)\n  /**  @group trig */\n  def cos(x: Double): Double \u003d java.lang.Math.cos(x)\n  /**  @group trig */\n  def tan(x: Double): Double \u003d java.lang.Math.tan(x)\n  /**  @group trig */\n  def asin(x: Double): Double \u003d java.lang.Math.asin(x)\n  /**  @group trig */\n  def acos(x: Double): Double \u003d java.lang.Math.acos(x)\n  /**  @group trig */\n  def atan(x: Double): Double \u003d java.lang.Math.atan(x)\n\n  /** Converts an angle measured in degrees to an approximately equivalent\n   *  angle measured in radians.\n   *\n   *  @param  x an angle, in degrees\n   *  @return the measurement of the angle `x` in radians.\n   *  @group angle-conversion\n   */\n  def toRadians(x: Double): Double \u003d java.lang.Math.toRadians(x)\n\n  /** Converts an angle measured in radians to an approximately equivalent\n   *  angle measured in degrees.\n   *\n   *  @param  x angle, in radians\n   *  @return the measurement of the angle `x` in degrees.\n   *  @group angle-conversion\n   */\n  def toDegrees(x: Double): Double \u003d java.lang.Math.toDegrees(x)\n\n  /** Converts rectangular coordinates `(x, y)` to polar `(r, theta)`.\n   *\n   *  @param  x the ordinate coordinate\n   *  @param  y the abscissa coordinate\n   *  @return the \u0027\u0027theta\u0027\u0027 component of the point `(r, theta)` in polar\n   *          coordinates that corresponds to the point `(x, y)` in\n   *          Cartesian coordinates.\n   *  @group polar-coords\n   */\n  def atan2(y: Double, x: Double): Double \u003d java.lang.Math.atan2(y, x)\n\n  /** Returns the square root of the sum of the squares of both given `Double`\n    * values without intermediate underflow or overflow.\n    *\n    * The \u0027\u0027r\u0027\u0027 component of the point `(r, theta)` in polar\n    * coordinates that corresponds to the point `(x, y)` in\n    * Cartesian coordinates.\n    * @group polar-coords\n    */\n  def hypot(x: Double, y: Double): Double \u003d java.lang.Math.hypot(x, y)\n\n  // -----------------------------------------------------------------------\n  // rounding functions\n  // -----------------------------------------------------------------------\n\n  /** @group rounding */\n  def ceil(x: Double): Double  \u003d java.lang.Math.ceil(x)\n  /** @group rounding */\n  def floor(x: Double): Double \u003d java.lang.Math.floor(x)\n\n  /** Returns the `Double` value that is closest in value to the\n    *  argument and is equal to a mathematical integer.\n    *\n    *  @param  x a `Double` value\n    *  @return the closest floating-point value to a that is equal to a\n    *          mathematical integer.\n    *  @group rounding\n    */\n  def rint(x: Double): Double \u003d java.lang.Math.rint(x)\n\n  /** There is no reason to round a `Long`, but this method prevents unintended conversion to `Float` followed by rounding to `Int`.\n   *\n   *  @note Does not forward to [[java.lang.Math]]\n   *  @group rounding\n   */\n  @deprecated(\"This is an integer type; there is no reason to round it. Perhaps you meant to call this with a floating-point value?\", \"2.11.0\")\n  def round(x: Long): Long \u003d x\n\n  /** Returns the closest `Int` to the argument.\n   *\n   *  @param  x a floating-point value to be rounded to a `Int`.\n   *  @return the value of the argument rounded to the nearest `Int` value.\n   *  @group rounding\n   */\n  def round(x: Float): Int \u003d java.lang.Math.round(x)\n\n  /** Returns the closest `Long` to the argument.\n   *\n   *  @param  x a floating-point value to be rounded to a `Long`.\n   *  @return the value of the argument rounded to the nearest`long` value.\n   *  @group rounding\n   */\n  def round(x: Double): Long \u003d java.lang.Math.round(x)\n\n  /** @group abs */\n  def abs(x: Int): Int       \u003d java.lang.Math.abs(x)\n  /** @group abs */\n  def abs(x: Long): Long     \u003d java.lang.Math.abs(x)\n  /** @group abs */\n  def abs(x: Float): Float   \u003d java.lang.Math.abs(x)\n  /** @group abs */\n  def abs(x: Double): Double \u003d java.lang.Math.abs(x)\n\n  /** @group minmax */\n  def max(x: Int, y: Int): Int          \u003d java.lang.Math.max(x, y)\n  /** @group minmax */\n  def max(x: Long, y: Long): Long       \u003d java.lang.Math.max(x, y)\n  /** @group minmax */\n  def max(x: Float, y: Float): Float    \u003d java.lang.Math.max(x, y)\n  /** @group minmax */\n  def max(x: Double, y: Double): Double \u003d java.lang.Math.max(x, y)\n\n  /** @group minmax */\n  def min(x: Int, y: Int): Int          \u003d java.lang.Math.min(x, y)\n  /** @group minmax */\n  def min(x: Long, y: Long): Long       \u003d java.lang.Math.min(x, y)\n  /** @group minmax */\n  def min(x: Float, y: Float): Float    \u003d java.lang.Math.min(x, y)\n  /** @group minmax */\n  def min(x: Double, y: Double): Double \u003d java.lang.Math.min(x, y)\n\n  /** @group signs\n    * @note Forwards to [[java.lang.Integer]]\n    */\n  def signum(x: Int): Int       \u003d java.lang.Integer.signum(x)\n  /** @group signs\n    * @note Forwards to [[java.lang.Long]]\n    */\n  def signum(x: Long): Long     \u003d java.lang.Long.signum(x)\n  /** @group signs */\n  def signum(x: Float): Float   \u003d java.lang.Math.signum(x)\n  /** @group signs */\n  def signum(x: Double): Double \u003d java.lang.Math.signum(x)\n\n  /** @group modquo */\n  def floorDiv(x: Int, y: Int): Int \u003d java.lang.Math.floorDiv(x, y)\n\n  /** @group modquo */\n  def floorDiv(x: Long, y: Long): Long \u003d java.lang.Math.floorDiv(x, y)\n\n  /** @group modquo */\n  def floorMod(x: Int, y: Int): Int \u003d java.lang.Math.floorMod(x, y)\n\n  /** @group modquo */\n  def floorMod(x: Long, y: Long): Long \u003d java.lang.Math.floorMod(x, y)\n\n  /** @group signs */\n  def copySign(magnitude: Double, sign: Double): Double \u003d java.lang.Math.copySign(magnitude, sign)\n\n  /** @group signs */\n  def copySign(magnitude: Float, sign: Float): Float \u003d java.lang.Math.copySign(magnitude, sign)\n\n  /** @group adjacent-float */\n  def nextAfter(start: Double, direction: Double): Double \u003d java.lang.Math.nextAfter(start, direction)\n\n  /** @group adjacent-float */\n  def nextAfter(start: Float, direction: Double): Float \u003d java.lang.Math.nextAfter(start, direction)\n\n  /** @group adjacent-float */\n  def nextUp(d: Double): Double \u003d java.lang.Math.nextUp(d)\n\n  /** @group adjacent-float */\n  def nextUp(f: Float): Float \u003d java.lang.Math.nextUp(f)\n\n  /** @group adjacent-float */\n  def nextDown(d: Double): Double \u003d java.lang.Math.nextDown(d)\n\n  /** @group adjacent-float */\n  def nextDown(f: Float): Float \u003d java.lang.Math.nextDown(f)\n\n  /** @group scaling */\n  def scalb(d: Double, scaleFactor: Int): Double \u003d java.lang.Math.scalb(d, scaleFactor)\n\n  /** @group scaling */\n  def scalb(f: Float, scaleFactor: Int): Float \u003d java.lang.Math.scalb(f, scaleFactor)\n\n  // -----------------------------------------------------------------------\n  // root functions\n  // -----------------------------------------------------------------------\n\n  /** Returns the square root of a `Double` value.\n    *\n    * @param  x the number to take the square root of\n    * @return the value ?x\n    * @group root-extraction\n    */\n  def sqrt(x: Double): Double \u003d java.lang.Math.sqrt(x)\n\n  /** Returns the cube root of the given `Double` value.\n    *\n    * @param  x the number to take the cube root of\n    * @return the value ?x\n    * @group root-extraction\n    */\n  def cbrt(x: Double): Double \u003d java.lang.Math.cbrt(x)\n\n  // -----------------------------------------------------------------------\n  // exponential functions\n  // -----------------------------------------------------------------------\n\n  /** Returns the value of the first argument raised to the power of the\n    *  second argument.\n    *\n    *  @param x the base.\n    *  @param y the exponent.\n    *  @return the value `x^y^`.\n    *  @group explog\n    */\n  def pow(x: Double, y: Double): Double \u003d java.lang.Math.pow(x, y)\n\n  /** Returns Euler\u0027s number `e` raised to the power of a `Double` value.\n    *\n    *  @param  x the exponent to raise `e` to.\n    *  @return the value `e^a^`, where `e` is the base of the natural\n    *          logarithms.\n    *  @group explog\n    */\n  def exp(x: Double): Double \u003d java.lang.Math.exp(x)\n\n  /** Returns `exp(x) - 1`.\n    *  @group explog\n    */\n  def expm1(x: Double): Double \u003d java.lang.Math.expm1(x)\n\n  /** @group explog */\n  def getExponent(f: Float): Int \u003d java.lang.Math.getExponent(f)\n\n  /** @group explog */\n  def getExponent(d: Double): Int \u003d java.lang.Math.getExponent(d)\n\n  // -----------------------------------------------------------------------\n  // logarithmic functions\n  // -----------------------------------------------------------------------\n\n  /** Returns the natural logarithm of a `Double` value.\n    *\n    *  @param  x the number to take the natural logarithm of\n    *  @return the value `log?(x)` where `e` is Eulers number\n    *  @group explog\n    */\n  def log(x: Double): Double \u003d java.lang.Math.log(x)\n\n  /** Returns the natural logarithm of the sum of the given `Double` value and 1.\n    *  @group explog\n    */\n  def log1p(x: Double): Double \u003d java.lang.Math.log1p(x)\n\n  /** Returns the base 10 logarithm of the given `Double` value.\n    *  @group explog\n    */\n  def log10(x: Double): Double \u003d java.lang.Math.log10(x)\n\n  // -----------------------------------------------------------------------\n  // trigonometric functions\n  // -----------------------------------------------------------------------\n\n  /** Returns the hyperbolic sine of the given `Double` value.\n    * @group hyperbolic\n    */\n  def sinh(x: Double): Double \u003d java.lang.Math.sinh(x)\n\n  /** Returns the hyperbolic cosine of the given `Double` value.\n    * @group hyperbolic\n    */\n  def cosh(x: Double): Double \u003d java.lang.Math.cosh(x)\n\n  /** Returns the hyperbolic tangent of the given `Double` value.\n    * @group hyperbolic\n    */\n  def tanh(x: Double):Double \u003d java.lang.Math.tanh(x)\n\n  // -----------------------------------------------------------------------\n  // miscellaneous functions\n  // -----------------------------------------------------------------------\n\n  /** Returns the size of an ulp of the given `Double` value.\n    * @group ulp\n    */\n  def ulp(x: Double): Double \u003d java.lang.Math.ulp(x)\n\n  /** Returns the size of an ulp of the given `Float` value.\n    * @group ulp\n    */\n  def ulp(x: Float): Float \u003d java.lang.Math.ulp(x)\n\n  /** @group exact */\n  def IEEEremainder(x: Double, y: Double): Double \u003d java.lang.Math.IEEEremainder(x, y)\n\n  // -----------------------------------------------------------------------\n  // exact functions\n  // -----------------------------------------------------------------------\n\n  /** @group exact */\n  def addExact(x: Int, y: Int): Int \u003d java.lang.Math.addExact(x, y)\n\n  /** @group exact */\n  def addExact(x: Long, y: Long): Long \u003d java.lang.Math.addExact(x, y)\n\n  /** @group exact */\n  def subtractExact(x: Int, y: Int): Int \u003d java.lang.Math.subtractExact(x, y)\n\n  /** @group exact */\n  def subtractExact(x: Long, y: Long): Long \u003d java.lang.Math.subtractExact(x, y)\n\n  /** @group exact */\n  def multiplyExact(x: Int, y: Int): Int \u003d java.lang.Math.multiplyExact(x, y)\n\n  /** @group exact */\n  def multiplyExact(x: Long, y: Long): Long \u003d java.lang.Math.multiplyExact(x, y)\n\n  /** @group exact */\n  def incrementExact(x: Int): Int \u003d java.lang.Math.incrementExact(x)\n\n  /** @group exact */\n  def incrementExact(x: Long) \u003d  java.lang.Math.incrementExact(x)\n\n  /** @group exact */\n  def decrementExact(x: Int) \u003d  java.lang.Math.decrementExact(x)\n\n  /** @group exact */\n  def decrementExact(x: Long) \u003d  java.lang.Math.decrementExact(x)\n\n  /** @group exact */\n  def negateExact(x: Int) \u003d  java.lang.Math.negateExact(x)\n\n  /** @group exact */\n  def negateExact(x: Long) \u003d  java.lang.Math.negateExact(x)\n\n  /** @group exact */\n  def toIntExact(x: Long): Int \u003d java.lang.Math.toIntExact(x)\n\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/math/package.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/math/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

Jul 16, 2024 1:59:19 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/math/package.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/math/package.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/math/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 01:59:20 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 01:59:20 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.57s
Jul 16, 2024 1:59:22 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 345
2024.07.16 02:00:29 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:00:29 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.68s
2024.07.16 02:00:31 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:00:31 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.49s
2024.07.16 02:01:03 WARN  Using indexes to guess the definition of Array
Jul 16, 2024 2:01:29 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 567
2024.07.16 02:01:50 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:01:50 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.55s
2024.07.16 02:01:54 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:01:54 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.59s
Jul 16, 2024 2:02:01 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 687
Jul 16, 2024 2:02:02 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 690
Jul 16, 2024 2:02:13 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 760
2024.07.16 02:02:31 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:02:31 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.52s
2024.07.16 02:02:34 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:02:34 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.44s
2024.07.16 02:02:58 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get_time.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:02:58 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get_time.scala. Using presentation compiler with project's scala-library version: 3.3.3
Jul 16, 2024 2:02:58 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 840
Jul 16, 2024 2:02:58 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 841
2024.07.16 02:02:58 INFO  Cancelling compilation on scala-cli server
2024.07.16 02:02:59 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:02:59 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.43s
2024.07.16 02:02:59 INFO  time: Imported build in 0.82s
2024.07.16 02:02:59 INFO  running doctor check
2024.07.16 02:02:59 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 02:02:59 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:00 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.59s
2024.07.16 02:03:00 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:00 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.52s
2024.07.16 02:03:01 INFO  time: indexed workspace in 2.26s
2024.07.16 02:03:02 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:02 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.44s
2024.07.16 02:03:03 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get_wholesale-cost.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:03 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get_wholesale-cost.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:03 INFO  Cancelling compilation on scala-cli server
2024.07.16 02:03:03 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\get_wholesale-cost.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:03 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:03 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.42s
2024.07.16 02:03:04 INFO  time: Imported build in 0.74s
2024.07.16 02:03:04 INFO  running doctor check
2024.07.16 02:03:04 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 02:03:03 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:05 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.58s
2024.07.16 02:03:05 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:05 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.44s
2024.07.16 02:03:06 INFO  time: indexed workspace in 2.23s
2024.07.16 02:03:07 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:07 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.36s
2024.07.16 02:03:13 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\sphere_volume.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:13 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\sphere_volume.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:13 INFO  Cancelling compilation on scala-cli server
2024.07.16 02:03:13 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:13 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
2024.07.16 02:03:14 INFO  time: Imported build in 0.75s
2024.07.16 02:03:14 INFO  running doctor check
2024.07.16 02:03:14 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 02:03:13 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:14 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.42s
2024.07.16 02:03:14 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:14 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.37s
2024.07.16 02:03:16 INFO  time: indexed workspace in 1.96s
2024.07.16 02:03:16 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:16 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.31s
2024.07.16 02:03:20 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\to_fahrenhiet.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:20 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\to_fahrenhiet.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:21 INFO  Cancelling compilation on scala-cli server
2024.07.16 02:03:21 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_1\to_fahrenhiet.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:03:21 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:21 WARN  Invalid text document uri received from build server: file:///D:/Uni/2y%20-%201st%20sem/Code/functional-programming-with-scala/practical_1/to-fahrenhiet.scala
2024.07.16 02:03:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.39s
2024.07.16 02:03:21 INFO  time: Imported build in 0.69s
2024.07.16 02:03:21 INFO  running doctor check
2024.07.16 02:03:21 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 02:03:21 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:21 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.38s
2024.07.16 02:03:22 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:22 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
2024.07.16 02:03:23 INFO  time: indexed workspace in 2.2s
2024.07.16 02:03:24 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:24 INFO  time: compiled functional-programming-with-scala_52168fea17 in 0.46s
2024.07.16 02:03:49 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:906)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:739)
	scala.meta.internal.metals.WorkspaceLspService.getServiceForOpt(WorkspaceLspService.scala:305)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:314)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:780)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	java.base/java.lang.reflect.Method.invoke(Method.java:568)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:128)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:271)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	java.base/java.lang.Thread.run(Thread.java:833)
```

Jul 16, 2024 2:03:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def ?[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:388)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at jdk.internal.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 23 more

Jul 16, 2024 2:03:49 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/HP%20840%20G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:178)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:175)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:175)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:756)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:753)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 23: jar:file:///C:/Users/HP 840 G5/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.07.16 02:03:49 INFO  compiling functional-programming-with-scala_52168fea17 (17 scala sources)
2024.07.16 02:03:53 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.07.16 02:03:53 INFO  time: compiled functional-programming-with-scala_52168fea17 in 5.19s
2024.07.16 02:04:20 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_3\sum-even-numbers.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:04:21 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_3\sum-even-numbers.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:04:21 INFO  running doctor check
2024.07.16 02:04:21 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 02:04:21 INFO  compiling functional-programming-with-scala_52168fea17 (4 scala sources)
2024.07.16 02:04:22 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.17s
2024.07.16 02:04:24 INFO  time: indexed workspace in 2.61s
2024.07.16 02:04:28 INFO  no build target found for D:\Uni\2y - 1st sem\Code\functional-programming-with-scala\practical_4\pattern-match.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.07.16 02:04:29 INFO  running doctor check
2024.07.16 02:04:29 INFO  java targets: functional-programming-with-scala_52168fea17-test, functional-programming-with-scala_52168fea17
2024.07.16 02:04:29 INFO  compiling functional-programming-with-scala_52168fea17 (3 scala sources)
2024.07.16 02:04:30 INFO  time: compiled functional-programming-with-scala_52168fea17 in 1.19s
2024.07.16 02:04:32 INFO  time: indexed workspace in 2.7s
